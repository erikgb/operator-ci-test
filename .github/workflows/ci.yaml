---
name: CI
on:
  pull_request: {}
  push:
    branches:
      - main
permissions:
  contents: read
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  verify-generated:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Generate all
        run: |
          make generate-all
      - name: Verify changed files
        uses: tj-actions/verify-changed-files@v13
        id: verify-changed-files
        with:
          files: |
            **/*
      - name: Fail job is any changed files
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          errorMsg="::error::\
            Changed files: ${{ steps.verify-changed-files.outputs.changed_files }}\
            \nPlease run 'make generate-all' locally and commit the changes"
          echo -e "$errorMsg" && exit 1
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: project/controller:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/controller-image.tar
      - uses: actions/upload-artifact@v3
        with:
          name: controller-image
          path: /tmp/controller-image.tar
  e2e-test:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: controller-image
          path: /tmp
      - uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: e2e
          args: >-
            --config=k3d-config.yaml
      - run: |
          kubectl cluster-info
          kubectl version --output=yaml
      - run: |
          helm repo add jetstack https://charts.jetstack.io
          helm install \
            cert-manager jetstack/cert-manager \
            --namespace cert-manager \
            --create-namespace \
            --version v1.10.1 \
            --set installCRDs=true     
      - run: |
          k3d image import --cluster e2e /tmp/controller-image.tar
          cd config/manager && kustomize edit set image controller=project/controller:latest && cd -
          kubectl apply --server-side -k config/default
      - run: |
          kubectl get deployment.apps/project-controller-manager -n project-system -o yaml
          for w in deployment.apps/project-controller-manager; do
              kubectl rollout status $w -n project-system --timeout=1m \
              || (kubectl get events -n project-system; kubectl logs -n project-system $w --tail -1; false);
          done
      - uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: kudobuilder/kuttl
          tag: v0.15.0
          cache: enable
      - run: |
          kubectl kuttl version
      - run: |
          kubectl kuttl test --config kuttl-test.yaml
 